#!/bin/bash

# DISCLAIMER: Generated by ChatGPT, and tweaked afterwards!
# Prompts:
#    - I want to write a bash script that takes all the folders inside of a directory and compresses them to a .tar.xz file
#    - Can you also add an optional argument to filter folder names with a minimatch pattern?
#    - Also, print the progress inside of the loop with the format "(current/total)"

# Check for the correct number of command-line arguments
if [ $# -lt 2 ] || [ $# -gt 3 ]; then
  echo "Usage: $0 <source_directory> <destination_directory> [minimatch_pattern]"
  exit 1
fi

source_directory="$1"
destination_directory="$2"
minimatch_pattern="${3:-*}"

# Check if the source directory exists
if [ ! -d "$source_directory" ]; then
  echo "Error: Source directory not found."
  exit 1
fi

# Check if the destination directory exists, create if not
if [ ! -d "$destination_directory" ]; then
  mkdir -p "$destination_directory"
fi

# Enable extended pattern matching
shopt -s extglob

# Count the total number of folders matching the pattern
total_folders=$(find "$source_directory" -maxdepth 1 -type d -name "$minimatch_pattern" | wc -l)
current_folder=0

# Loop through each folder in the source directory matching the minimatch pattern
for folder in "$source_directory"/$minimatch_pattern/; do
  # Extract folder name without path
  folder_name=$(basename "$folder")

  # Increment the current folder count
  ((current_folder++))

  # Print progress
  echo "Processing folder $current_folder/$total_folders: $folder_name"

  tar -caf "$destination_directory/${folder_name}.tar.xz" -C "$source_directory" "$folder_name"

  echo "Compressed $folder_name to ${folder_name}.tar.xz"
done

# Disable extended pattern matching
shopt -u extglob

echo "Compression complete."
